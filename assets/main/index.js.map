{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ButtonFeedbacks.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorManager.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorSetter.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/telegram-web.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/VibrationManager.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","type","CCFloat","tooltip","_dec3","_dec4","_dec5","_dec6","_descriptor","_applyDecoratedDescriptor","_class2","_Component","ButtonFeedbacks","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","originalScale","Vec3","_inheritsLoose","_proto","prototype","start","this","set","node","scale","on","Node","EventType","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","TOUCH_END","onClick","useHoverTween","tween","to","hoverDuration","hoverScale","useClickTween","VibrationManager","soft","clickDuration","clickScale","clickScaleUp","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","ColorManager","userThemeParams","defaultThemeParams","bg_color","text_color","hint_color","link_color","button_color","button_text_color","secondary_bg_color","header_bg_color","bottom_bar_bg_color","accent_text_color","section_bg_color","section_header_text_color","section_separator_color","subtitle_text_color","destructive_text_color","onLoad","_this2","_instance","TelegramWebApp","Instance","init","then","error","console","destroy","warn","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isInited","Promise","resolve","setTimeout","getTelegramThemeParams","stop","getBgColor","isDefault","Color","getTextColor","getHintColor","getLinkColor","getButtonColor","getButtonTextColor","getSecondaryBgColor","getHeaderBgColor","getBottomBarBgColor","getAccentTextColor","getSectionBgColor","getSectionHeaderTextColor","getSectionSeparatorColor","getSubtitleTextColor","getDestructiveTextColor","_createClass","key","get","ColorType","Sprite","Label","Enum","ColorSetter","colorManager","color","abrupt","t0","colorType","BgColor","TextColor","HintColor","LinkColor","ButtonColor","ButtonTextColor","SecondaryBgColor","HeaderBgColor","BottomBarBgColor","AccentTextColor","SectionBgColor","SectionHeaderTextColor","SectionSeparatorColor","SubtitleTextColor","DestructiveTextColor","sprite","label","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","Error","head","appendChild","_tgWebAppJS","sent","success","openTelegramLink","url","share","text","shareUrl","URLSearchParams","toString","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","getTelegramWebApp","themeParams","getTelegramWebAppInitData","initDataUnsafe","getTelegramUser","user","doHapticImpact","style","HapticFeedback","impactOccurred","doHapticNotification","notificationOccurred","getTelegramInitData","initData","openInvoice","callback","alert","message","showAlert","isVibrationSupported","light","medium","heavy","rigid","warning"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, tween, Vec3, Node, CCFloat } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ButtonFeedbacks')\nexport class ButtonFeedbacks extends Component {\n    @property\n    useHoverTween = true;\n\n    @property\n    useClickTween = true;\n\n    @property({ type: CCFloat, tooltip: \"Hover reduction time (in seconds)\" })\n    hoverDuration: number = 0.2;\n\n    @property({tooltip: \"How many times to reduce when hovering\" }) \n    hoverScale: Vec3 = new Vec3(0.95, 0.95, 0.95);\n\n    @property({ type: CCFloat, tooltip: \"Time to decrease when pressed (in seconds)\" })\n    clickDuration: number = 0.1;\n\n    @property({tooltip: \"How many times to reduce when pressed\" })\n    clickScale: Vec3 = new Vec3(0.9, 0.9, 0.9);\n\n    @property({tooltip: \"How much to increase after clicking\" }) \n    clickScaleUp: Vec3 = new Vec3(1.1, 1.1, 1.1);\n\n    private originalScale: Vec3 = new Vec3();\n\n    start() {\n        this.originalScale.set(this.node.scale);\n\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    onMouseEnter() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.hoverScale })\n            .start();\n    }\n\n    onMouseLeave() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.originalScale })\n            .start();\n    }\n\n    onClick() {\n        if(!this.useClickTween) return;\n        VibrationManager.soft();\n        tween(this.node)\n            .to(this.clickDuration, { scale: this.clickScale })\n            .to(this.clickDuration/2, { scale: this.clickScaleUp })\n            .to(this.clickDuration, { scale: this.originalScale })\n            .start();\n    }\n}\n","import { _decorator, Color, Component, Node } from 'cc';\nimport { TelegramWebApp, ThemeParams } from \"./telegram-web\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('ColorManager')\nexport class ColorManager extends Component {\n\n    private static _instance: ColorManager = null;\n\n    public static get Instance(): ColorManager {\n        return this._instance;\n    }\n\n    userThemeParams: ThemeParams = null;\n\n    defaultThemeParams: ThemeParams = {\n        bg_color: \"FFFFFF\",\n        text_color: \"000000\",\n        hint_color: \"8A8A8E\",\n        link_color: \"007AFF\",\n        button_color: \"5AC8FB\",\n        button_text_color: \"FFFFFF\",\n        secondary_bg_color: \"F2F2F7\",\n        header_bg_color: \"F9F9F9\",\n        bottom_bar_bg_color : \"FF7171\",\n        accent_text_color: \"007AFF\",\n        section_bg_color: \"FFFFFF\",\n        section_header_text_color: \"85858B\",\n        section_separator_color: \"D4D4D5\",\n        subtitle_text_color: \"8A8A8E\",\n        destructive_text_color: \"FF3B30\"\n    }\n\n    protected onLoad(): void {\n        if (ColorManager._instance === null) {\n            ColorManager._instance = this;\n            TelegramWebApp.Instance.init().then(() => {\n                this.init();\n            }).catch((error) => {\n                console.error('Failed to initialize TelegramWebApp:', error);\n            });\n        } else {\n            this.destroy();\n            console.warn('Multiple instances of ColorManager detected.');\n        }\n    }\n\n    async init(){\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.userThemeParams = TelegramWebApp.Instance.getTelegramThemeParams();\n    }\n\n    public getBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bg_color);\n        }\n        return new Color(this.userThemeParams.bg_color);\n    }\n    public getTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.text_color);\n        }\n        return new Color(this.userThemeParams.text_color);\n    }\n    public getHintColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.hint_color);\n        }\n        return new Color(this.userThemeParams.hint_color);\n    }\n    public getLinkColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.link_color);\n        }\n        return new Color(this.userThemeParams.link_color);\n    }\n    public getButtonColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_color);\n        }\n        return new Color(this.userThemeParams.button_color);\n    }\n    public getButtonTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_text_color);\n        }\n        return new Color(this.userThemeParams.button_text_color);\n    }\n    public getSecondaryBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.secondary_bg_color);\n        }\n        return new Color(this.userThemeParams.secondary_bg_color);\n    }\n    public getHeaderBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.header_bg_color);\n        }\n        return new Color(this.userThemeParams.header_bg_color);\n    }\n    public getBottomBarBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bottom_bar_bg_color);\n        }\n        return new Color(this.userThemeParams.bottom_bar_bg_color);\n    }\n    public getAccentTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.accent_text_color);\n        }\n        return new Color(this.userThemeParams.accent_text_color);\n    }\n    public getSectionBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_bg_color);\n        }\n        return new Color(this.userThemeParams.section_bg_color);\n    }\n    public getSectionHeaderTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_header_text_color);\n        }\n        return new Color(this.userThemeParams.section_header_text_color);\n    }\n    public getSectionSeparatorColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_separator_color);\n        }\n        return new Color(this.userThemeParams.section_separator_color);\n    }\n    public getSubtitleTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.subtitle_text_color);\n        }\n        return new Color(this.userThemeParams.subtitle_text_color);\n    }\n    public getDestructiveTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.destructive_text_color);\n        }\n        return new Color(this.userThemeParams.destructive_text_color);\n    }\n}","import { _decorator, Component, Sprite, Enum, Label } from 'cc';\nimport { ColorManager } from './ColorManager';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport enum ColorType {\n    BgColor = 0,\n    TextColor,\n    HintColor,\n    LinkColor,\n    ButtonColor,\n    ButtonTextColor,\n    SecondaryBgColor,\n    HeaderBgColor,\n    BottomBarBgColor,\n    AccentTextColor,\n    SectionBgColor,\n    SectionHeaderTextColor,\n    SectionSeparatorColor,\n    SubtitleTextColor,\n    DestructiveTextColor\n}\n\n@ccclass('ColorSetter')\nexport class ColorSetter extends Component {\n\n    @property\n    isDefault: boolean = false;\n\n    @property(Sprite)\n    sprite: Sprite = null;\n\n    @property(Label)\n    label: Label = null;\n\n    @property({ type: Enum(ColorType) })\n    colorType: ColorType = ColorType.BgColor;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const colorManager = ColorManager.Instance;\n        if (!colorManager) {\n            console.error('ColorManager undefined');\n            return;\n        }\n\n        let color = null;\n        switch (this.colorType) {\n            case ColorType.BgColor:\n                color = colorManager.getBgColor(this.isDefault);\n                break;\n            case ColorType.TextColor:\n                color = colorManager.getTextColor(this.isDefault);\n                break;\n            case ColorType.HintColor:\n                color = colorManager.getHintColor(this.isDefault);\n                break;\n            case ColorType.LinkColor:\n                color = colorManager.getLinkColor(this.isDefault);\n                break;\n            case ColorType.ButtonColor:\n                color = colorManager.getButtonColor(this.isDefault);\n                break;\n            case ColorType.ButtonTextColor:\n                color = colorManager.getButtonTextColor(this.isDefault);\n                break;\n            case ColorType.SecondaryBgColor:\n                color = colorManager.getSecondaryBgColor(this.isDefault);\n                break;\n            case ColorType.HeaderBgColor:\n                color = colorManager.getHeaderBgColor(this.isDefault);\n                break;\n            case ColorType.BottomBarBgColor:\n                color = colorManager.getBottomBarBgColor(this.isDefault);\n                break;\n            case ColorType.AccentTextColor:\n                color = colorManager.getAccentTextColor(this.isDefault);\n                break;\n            case ColorType.SectionBgColor:\n                color = colorManager.getSectionBgColor(this.isDefault);\n                break;\n            case ColorType.SectionHeaderTextColor:\n                color = colorManager.getSectionHeaderTextColor(this.isDefault);\n                break;\n            case ColorType.SectionSeparatorColor:\n                color = colorManager.getSectionSeparatorColor(this.isDefault);\n                break;\n            case ColorType.SubtitleTextColor:\n                color = colorManager.getSubtitleTextColor(this.isDefault);\n                break;\n            case ColorType.DestructiveTextColor:\n                color = colorManager.getDestructiveTextColor(this.isDefault);\n                break;\n            default:\n                console.error('Unknown type of color');\n                break;\n        }\n\n        if (color) {\n            if(this.sprite){\n                this.sprite.color = color;\n            }\n            \n            if(this.label){\n                this.label.color = color;\n            }\n        }\n    }\n}","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface ThemeParams {\n    bg_color: string;\n    text_color: string;\n    hint_color: string;\n    link_color: string;\n    button_color: string;\n    button_text_color: string;\n    secondary_bg_color: string;\n    header_bg_color: string;\n    bottom_bar_bg_color: string;\n    accent_text_color: string;\n    section_bg_color: string;\n    section_header_text_color: string;\n    section_separator_color: string;\n    subtitle_text_color: string;\n    destructive_text_color: string;\n}\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramThemeParams(): ThemeParams {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.themeParams;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public doHapticImpact(style: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.impactOccurred(style);\n    }\n\n    public doHapticNotification(type: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.notificationOccurred(type);\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n\n    public get isInited(): boolean {\n        return this._tgWebAppJS != null;\n    }\n}\n\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationManager')\nexport default class VibrationManager {\n    private static isVibrationSupported(): boolean {\n        return TelegramWebApp.Instance != null;\n    }\n\n    public static light(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"light\");\n        }\n    }\n\n    public static medium(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"medium\");\n        }\n    }\n\n    public static heavy(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"heavy\");\n        }\n    }\n\n    public static rigid(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"rigid\");\n        }\n    }\n\n    public static soft(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"soft\");\n        }\n    }\n\n    public static error(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"error\");\n        }\n    }\n\n    public static success(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"success\");\n        }\n    }\n\n    public static warning(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"warning\");\n        }\n    }\n}\n"]}