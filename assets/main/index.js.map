{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ButtonFeedbacks.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorManager.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorSetter.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/OnboardingController.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/SlidePopup.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/telegram-web.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/TestTgFutures.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/TypewriterEffect.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/UserDataManager.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/VibrationManager.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","type","CCFloat","tooltip","_dec3","_dec4","_dec5","_dec6","_descriptor","_applyDecoratedDescriptor","_class2","_Component","ButtonFeedbacks","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","originalScale","Vec3","_inheritsLoose","_proto","prototype","start","this","set","node","scale","on","Node","EventType","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","TOUCH_END","onClick","useHoverTween","tween","to","hoverDuration","hoverScale","useClickTween","VibrationManager","soft","clickDuration","clickScale","clickScaleUp","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","ColorManager","userThemeParams","defaultThemeParams","bg_color","text_color","hint_color","link_color","button_color","button_text_color","secondary_bg_color","header_bg_color","bottom_bar_bg_color","accent_text_color","section_bg_color","section_header_text_color","section_separator_color","subtitle_text_color","destructive_text_color","onLoad","_this2","_instance","TelegramWebApp","Instance","init","then","error","console","destroy","warn","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isInited","Promise","resolve","setTimeout","getTelegramThemeParams","stop","getBgColor","isDefault","Color","getTextColor","getHintColor","getLinkColor","getButtonColor","getButtonTextColor","getSecondaryBgColor","getHeaderBgColor","getBottomBarBgColor","getAccentTextColor","getSectionBgColor","getSectionHeaderTextColor","getSectionSeparatorColor","getSubtitleTextColor","getDestructiveTextColor","_createClass","key","get","ColorType","Sprite","Label","RichText","Enum","ColorSetter","colorManager","color","abrupt","t0","colorType","BgColor","TextColor","HintColor","LinkColor","ButtonColor","ButtonTextColor","SecondaryBgColor","HeaderBgColor","BottomBarBgColor","AccentTextColor","SectionBgColor","SectionHeaderTextColor","SectionSeparatorColor","SubtitleTextColor","DestructiveTextColor","sprite","label","richText","fontColor","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","OnboardingController","isZombie","showZobmiesConfirm","confirm","onConfirmAnswered","bind","showHumansConfirm","onConfirmed","onChaneled","UserDataManager","getUserData","data","alert","log","isZombieDataValue","myName","getTelegramUser","first_name","userData","balance","level","saveUserData","success","PopupState","SlideDirection","SlidePopup","state","None","initPosition","isOpenAtStart","Shown","startPos","getStartPosition","hideDirection","Hidden","direction","canvasSize","contentSize","Left","Right","Top","Bottom","show","Hiding","Showing","showDirection","showDuration","position","easing","hide","_this3","endPos","hideDuration","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","Error","head","appendChild","_tgWebAppJS","sent","openTelegramLink","url","share","text","shareUrl","URLSearchParams","toString","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","getTelegramWebApp","themeParams","getTelegramWebAppInitData","initDataUnsafe","user","doHapticImpact","style","HapticFeedback","impactOccurred","doHapticNotification","notificationOccurred","getTelegramInitData","initData","openInvoice","callback","message","showAlert","showConfirm","cloudStorageSetItem","value","storage","cloudStorage","setItem","cloudStorageGetItem","getItem","cloudStorageGetItems","keys","getItems","cloudStorageRemoveItem","removeItem","cloudStorageRemoveItems","removeItems","cloudStorageGetKeys","getKeys","TestTgFutures","answer","multiline","_dec7","_dec8","_dec9","EventHandler","TypewriterEffect","_descriptor8","_isTyping","startsOnStart","ShowText","typeText","_typeText","characters","totalCharacters","baseInterval","_char","fullText","split","totalTime","char","sleep","pauseAfterPeriod","pauseAfterComma","delayBeforeEvent","emitEvents","onTypingComplete","ms","telegramWebApp","dataString","JSON","stringify","parse","updateUserData","partialData","updatedData","_extends","removeUserData","isVibrationSupported","light","medium","heavy","rigid","warning"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, tween, Vec3, Node, CCFloat } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ButtonFeedbacks')\nexport class ButtonFeedbacks extends Component {\n    @property\n    useHoverTween = true;\n\n    @property\n    useClickTween = true;\n\n    @property({ type: CCFloat, tooltip: \"Hover reduction time (in seconds)\" })\n    hoverDuration: number = 0.2;\n\n    @property({tooltip: \"How many times to reduce when hovering\" }) \n    hoverScale: Vec3 = new Vec3(0.95, 0.95, 0.95);\n\n    @property({ type: CCFloat, tooltip: \"Time to decrease when pressed (in seconds)\" })\n    clickDuration: number = 0.1;\n\n    @property({tooltip: \"How many times to reduce when pressed\" })\n    clickScale: Vec3 = new Vec3(0.9, 0.9, 0.9);\n\n    @property({tooltip: \"How much to increase after clicking\" }) \n    clickScaleUp: Vec3 = new Vec3(1.1, 1.1, 1.1);\n\n    private originalScale: Vec3 = new Vec3();\n\n    start() {\n        this.originalScale.set(this.node.scale);\n\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    onMouseEnter() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.hoverScale })\n            .start();\n    }\n\n    onMouseLeave() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.originalScale })\n            .start();\n    }\n\n    onClick() {\n        if(!this.useClickTween) return;\n        VibrationManager.soft();\n        tween(this.node)\n            .to(this.clickDuration, { scale: this.clickScale })\n            .to(this.clickDuration/2, { scale: this.clickScaleUp })\n            .to(this.clickDuration, { scale: this.originalScale })\n            .start();\n    }\n}\n","import { _decorator, Color, Component, Node } from 'cc';\nimport { TelegramWebApp, ThemeParams } from \"./telegram-web\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('ColorManager')\nexport class ColorManager extends Component {\n\n    private static _instance: ColorManager = null;\n\n    public static get Instance(): ColorManager {\n        return this._instance;\n    }\n\n    userThemeParams: ThemeParams = null;\n\n    defaultThemeParams: ThemeParams = {\n        bg_color: \"FFFFFF\",\n        text_color: \"000000\",\n        hint_color: \"8A8A8E\",\n        link_color: \"007AFF\",\n        button_color: \"5AC8FB\",\n        button_text_color: \"FFFFFF\",\n        secondary_bg_color: \"F2F2F7\",\n        header_bg_color: \"F9F9F9\",\n        bottom_bar_bg_color : \"FF7171\",\n        accent_text_color: \"007AFF\",\n        section_bg_color: \"FFFFFF\",\n        section_header_text_color: \"85858B\",\n        section_separator_color: \"D4D4D5\",\n        subtitle_text_color: \"8A8A8E\",\n        destructive_text_color: \"FF3B30\"\n    }\n\n    protected onLoad(): void {\n        if (ColorManager._instance === null) {\n            ColorManager._instance = this;\n            TelegramWebApp.Instance.init().then(() => {\n                this.init();\n            }).catch((error) => {\n                console.error('Failed to initialize TelegramWebApp:', error);\n            });\n        } else {\n            this.destroy();\n            console.warn('Multiple instances of ColorManager detected.');\n        }\n    }\n\n    async init(){\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.userThemeParams = TelegramWebApp.Instance.getTelegramThemeParams();\n    }\n\n    public getBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bg_color);\n        }\n        return new Color(this.userThemeParams.bg_color);\n    }\n    public getTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.text_color);\n        }\n        return new Color(this.userThemeParams.text_color);\n    }\n    public getHintColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.hint_color);\n        }\n        return new Color(this.userThemeParams.hint_color);\n    }\n    public getLinkColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.link_color);\n        }\n        return new Color(this.userThemeParams.link_color);\n    }\n    public getButtonColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_color);\n        }\n        return new Color(this.userThemeParams.button_color);\n    }\n    public getButtonTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_text_color);\n        }\n        return new Color(this.userThemeParams.button_text_color);\n    }\n    public getSecondaryBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.secondary_bg_color);\n        }\n        return new Color(this.userThemeParams.secondary_bg_color);\n    }\n    public getHeaderBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.header_bg_color);\n        }\n        return new Color(this.userThemeParams.header_bg_color);\n    }\n    public getBottomBarBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bottom_bar_bg_color);\n        }\n        return new Color(this.userThemeParams.bottom_bar_bg_color);\n    }\n    public getAccentTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.accent_text_color);\n        }\n        return new Color(this.userThemeParams.accent_text_color);\n    }\n    public getSectionBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_bg_color);\n        }\n        return new Color(this.userThemeParams.section_bg_color);\n    }\n    public getSectionHeaderTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_header_text_color);\n        }\n        return new Color(this.userThemeParams.section_header_text_color);\n    }\n    public getSectionSeparatorColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_separator_color);\n        }\n        return new Color(this.userThemeParams.section_separator_color);\n    }\n    public getSubtitleTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.subtitle_text_color);\n        }\n        return new Color(this.userThemeParams.subtitle_text_color);\n    }\n    public getDestructiveTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.destructive_text_color);\n        }\n        return new Color(this.userThemeParams.destructive_text_color);\n    }\n}","import { _decorator, Component, Sprite, Enum, Label, RichText } from 'cc';\nimport { ColorManager } from './ColorManager';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport enum ColorType {\n    BgColor = 0,\n    TextColor,\n    HintColor,\n    LinkColor,\n    ButtonColor,\n    ButtonTextColor,\n    SecondaryBgColor,\n    HeaderBgColor,\n    BottomBarBgColor,\n    AccentTextColor,\n    SectionBgColor,\n    SectionHeaderTextColor,\n    SectionSeparatorColor,\n    SubtitleTextColor,\n    DestructiveTextColor\n}\n\n@ccclass('ColorSetter')\nexport class ColorSetter extends Component {\n\n    @property\n    isDefault: boolean = false;\n\n    @property(Sprite)\n    sprite: Sprite = null;\n\n    @property(Label)\n    label: Label = null;\n\n    @property(RichText)\n    richText: RichText = null;\n\n    @property({ type: Enum(ColorType) })\n    colorType: ColorType = ColorType.BgColor;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const colorManager = ColorManager.Instance;\n        if (!colorManager) {\n            console.error('ColorManager undefined');\n            return;\n        }\n\n        let color = null;\n        switch (this.colorType) {\n            case ColorType.BgColor:\n                color = colorManager.getBgColor(this.isDefault);\n                break;\n            case ColorType.TextColor:\n                color = colorManager.getTextColor(this.isDefault);\n                break;\n            case ColorType.HintColor:\n                color = colorManager.getHintColor(this.isDefault);\n                break;\n            case ColorType.LinkColor:\n                color = colorManager.getLinkColor(this.isDefault);\n                break;\n            case ColorType.ButtonColor:\n                color = colorManager.getButtonColor(this.isDefault);\n                break;\n            case ColorType.ButtonTextColor:\n                color = colorManager.getButtonTextColor(this.isDefault);\n                break;\n            case ColorType.SecondaryBgColor:\n                color = colorManager.getSecondaryBgColor(this.isDefault);\n                break;\n            case ColorType.HeaderBgColor:\n                color = colorManager.getHeaderBgColor(this.isDefault);\n                break;\n            case ColorType.BottomBarBgColor:\n                color = colorManager.getBottomBarBgColor(this.isDefault);\n                break;\n            case ColorType.AccentTextColor:\n                color = colorManager.getAccentTextColor(this.isDefault);\n                break;\n            case ColorType.SectionBgColor:\n                color = colorManager.getSectionBgColor(this.isDefault);\n                break;\n            case ColorType.SectionHeaderTextColor:\n                color = colorManager.getSectionHeaderTextColor(this.isDefault);\n                break;\n            case ColorType.SectionSeparatorColor:\n                color = colorManager.getSectionSeparatorColor(this.isDefault);\n                break;\n            case ColorType.SubtitleTextColor:\n                color = colorManager.getSubtitleTextColor(this.isDefault);\n                break;\n            case ColorType.DestructiveTextColor:\n                color = colorManager.getDestructiveTextColor(this.isDefault);\n                break;\n            default:\n                console.error('Unknown type of color');\n                break;\n        }\n\n        if (color) {\n            if(this.sprite){\n                this.sprite.color = color;\n            }\n            \n            if(this.label){\n                this.label.color = color;\n            }\n\n            if(this.richText){\n                this.richText.fontColor = color;\n            }\n        }\n    }\n}","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { UserMainData } from './UserInterfaces';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('OnboardingController')\nexport class OnboardingController extends Component {\n\n    isZombie: boolean = false;\n\n    public showZobmiesConfirm() {\n        this.isZombie = true;\n        const message = \"Ты выбрал присоединиться к Зомби. Это решение изменит твою судьбу.\";\n        TelegramWebApp.Instance.confirm(message, this.onConfirmAnswered.bind(this));\n    }\n\n    public showHumansConfirm() {\n        this.isZombie = false;\n        const message = \"Ты выбрал присоединиться к Людям. Это решение изменит твою судьбу.\";\n        TelegramWebApp.Instance.confirm(message, this.onConfirmAnswered.bind(this));\n    }\n\n    onConfirmAnswered(confirm: boolean) {\n        if (confirm) {\n            this.onConfirmed();\n        }\n        else {\n            this.onChaneled();\n        }\n    }\n\n    onConfirmed() {\n\n        UserDataManager.Instance.getUserData((error, data) => {\n            if (error) {\n                console.error(\"Error when receiving user data:\", error);\n                TelegramWebApp.Instance.alert(\"Error when receiving user data\");\n            } else if (data) {\n                console.log(\"Received user data:\", data);\n                const isZombieDataValue = data.isZombie;\n                TelegramWebApp.Instance.alert(\"The user's data already exists, is zomb - \" + isZombieDataValue);\n            } else {\n                console.log(\"The user's data was not found.\");\n\n                let myName = TelegramWebApp.Instance.getTelegramUser().first_name;\n\n                if (!myName) {\n                    myName = \"Anonymous\"\n                }\n                const userData: UserMainData = {\n                    name: myName,\n                    balance: 0,\n                    level: 1,\n                    isZombie: this.isZombie\n                };\n\n                UserDataManager.Instance.saveUserData(userData, (error, success) => {\n                    if (error) {\n                        console.error(\"Ошибка при сохранении данных пользователя:\", error);\n                    } else {\n                        console.log(\"Данные пользователя успешно сохранены:\", success);\n                    }\n                });\n            }\n        });\n    }\n\n    onChaneled() {\n\n    }\n}","import { _decorator, Component, Node, Vec3, tween, UITransform, Enum } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\nenum SlideDirection {\n    Left,\n    Right,\n    Top,\n    Bottom,\n}\n\n@ccclass('SlidePopup')\nexport class SlidePopup extends Component {\n    @property({ type: Enum(SlideDirection) })\n    showDirection: SlideDirection = SlideDirection.Left;\n\n    @property({ type: Enum(SlideDirection) })\n    hideDirection: SlideDirection = SlideDirection.Right;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initPosition();\n    }\n\n    initPosition() {\n        if (this.isOpenAtStart) {\n            this.node.setPosition(new Vec3(0, 0, 0));\n            this.state = PopupState.Shown;\n        } else {\n            const startPos = this.getStartPosition(this.hideDirection);\n            this.node.setPosition(startPos);\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    getStartPosition(direction: SlideDirection): Vec3 {\n        const canvasSize = this.node.parent!.getComponent(UITransform)!.contentSize;\n\n        switch (direction) {\n            case SlideDirection.Left:\n                return new Vec3(-canvasSize.width, 0, 0);\n            case SlideDirection.Right:\n                return new Vec3(canvasSize.width, 0, 0);\n            case SlideDirection.Top:\n                return new Vec3(0, canvasSize.height, 0);\n            case SlideDirection.Bottom:\n                return new Vec3(0, -canvasSize.height, 0);\n            default:\n                return new Vec3(0, 0, 0);\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        const startPos = this.getStartPosition(this.showDirection);\n        this.node.setPosition(startPos);\n\n        tween(this.node)\n            .to(this.showDuration, { position: new Vec3(0, 0, 0) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        const endPos = this.getStartPosition(this.hideDirection);\n\n        tween(this.node)\n            .to(this.hideDuration, { position: endPos }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface ThemeParams {\n    bg_color: string;\n    text_color: string;\n    hint_color: string;\n    link_color: string;\n    button_color: string;\n    button_text_color: string;\n    secondary_bg_color: string;\n    header_bg_color: string;\n    bottom_bar_bg_color: string;\n    accent_text_color: string;\n    section_bg_color: string;\n    section_header_text_color: string;\n    section_separator_color: string;\n    subtitle_text_color: string;\n    destructive_text_color: string;\n}\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\nexport interface CloudStorage {\n    setItem(key: string, value: string, callback?: (error: any, success: boolean) => void): CloudStorage;\n    getItem(key: string, callback: (error: any, value: string) => void): CloudStorage;\n    getItems(keys: string[], callback: (error: any, values: { [key: string]: string }) => void): CloudStorage;\n    removeItem(key: string, callback?: (error: any, success: boolean) => void): CloudStorage;\n    removeItems(keys: string[], callback?: (error: any, success: boolean) => void): CloudStorage;\n    getKeys(callback: (error: any, keys: string[]) => void): CloudStorage;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramThemeParams(): ThemeParams {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.themeParams;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public doHapticImpact(style: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.impactOccurred(style);\n    }\n\n    public doHapticNotification(type: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.notificationOccurred(type);\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n\n    public confirm(message: string, callback: any){\n        this._tgWebAppJS.showConfirm(message, callback);\n    }\n\n    //For cloudStorage\n    private get cloudStorage(): CloudStorage {\n        if (!this._tgWebAppJS) {\n            console.error(\"Telegram Web App is not initialized!\");\n            return null;\n        }\n        if (!this._tgWebAppJS.cloudStorage) {\n            console.error(\"CloudStorage is not available!\");\n            return null;\n        }\n        return this._tgWebAppJS.cloudStorage;\n    }\n\n    public cloudStorageSetItem(key: string, value: string, callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.setItem(key, value, callback);\n    }\n\n    public cloudStorageGetItem(key: string, callback: (error: any, value: string) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getItem(key, callback);\n    }\n\n    public cloudStorageGetItems(keys: string[], callback: (error: any, values: { [key: string]: string }) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getItems(keys, callback);\n    }\n\n    public cloudStorageRemoveItem(key: string, callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.removeItem(key, callback);\n    }\n\n    public cloudStorageRemoveItems(keys: string[], callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.removeItems(keys, callback);\n    }\n\n    public cloudStorageGetKeys(callback: (error: any, keys: string[]) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getKeys(callback);\n    }\n\n    public get isInited(): boolean {\n        return this._tgWebAppJS != null;\n    }\n}","import { _decorator, Component, Label } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TestTgFutures')\nexport class TestTgFutures extends Component {\n    @property(Label)\n    answer: Label = null;\n\n    public showConfirm(){\n        const message = \"Ты выбрал присоединиться к Зомби. Это решение изменит твою судьбу.\";\n        TelegramWebApp.Instance.confirm(message, this.onConfirmAnswered.bind(this));\n    }\n\n    onConfirmAnswered(confirm: boolean){\n        if(confirm){\n            this.onConfirmed();\n        }\n        else{\n            this.onChaneled();\n        }\n    }\n\n    onConfirmed(){\n        this.answer.string = \"true\";\n    }\n\n    onChaneled(){\n        this.answer.string = \"false\";\n    }\n    \n}\n\n","import { _decorator, Component, EventHandler, Label } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TypewriterEffect')\nexport class TypewriterEffect extends Component {\n\n    @property({ type: Label, tooltip: 'Label to display the text' })\n    label: Label = null;\n\n    @property({ multiline: true, tooltip: 'Full text to display' })\n    fullText: string = '';\n\n    @property({ tooltip: 'Total time to display the text (in seconds)' })\n    totalTime: number = 5;\n\n    @property({ tooltip: 'Pause after period (in seconds)' })\n    pauseAfterPeriod: number = 0.5;\n\n    @property({ tooltip: 'Pause after comma (in seconds)' })\n    pauseAfterComma: number = 0.3;\n\n    @property({ tooltip: 'Start typing automatically on start' })\n    startsOnStart: boolean = false;\n\n    @property({ tooltip: 'Delay before invoking the event (in seconds)' })\n    delayBeforeEvent: number = 0;\n\n    @property({ type: [EventHandler], tooltip: 'Event to call when typing is complete' })\n    onTypingComplete: EventHandler[] = [];\n\n    private _isTyping: boolean = false;\n\n    onLoad() {\n        if (this.startsOnStart) {\n            this.ShowText();\n        }\n    }\n\n    public ShowText() {\n        if (this._isTyping) {\n            return;\n        }\n        this._isTyping = true;\n        this.label.string = '';\n        this.typeText();\n    }\n\n    private async typeText() {\n        const characters = this.fullText.split('');\n        const totalCharacters = characters.length;\n        const baseInterval = this.totalTime / totalCharacters;\n\n        for (let i = 0; i < totalCharacters; i++) {\n            const char = characters[i];\n            this.label.string += char;\n\n            if (char === '.') {\n                await this.sleep(this.pauseAfterPeriod * 1000);\n            } else if (char === ',') {\n                await this.sleep(this.pauseAfterComma * 1000);\n            } else {\n                await this.sleep(baseInterval * 1000);\n            }\n        }\n        this._isTyping = false;\n\n        await this.sleep(this.delayBeforeEvent * 1000);\n\n        Component.EventHandler.emitEvents(this.onTypingComplete);\n    }\n\n    private sleep(ms: number) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n}\n","import { TelegramWebApp } from './telegram-web';\nimport { UserMainData } from './UserInterfaces';\n\nexport class UserDataManager {\n    private static _instance: UserDataManager;\n\n    private constructor() {}\n\n    public static get Instance(): UserDataManager {\n        if (!UserDataManager._instance) {\n            UserDataManager._instance = new UserDataManager();\n        }\n        return UserDataManager._instance;\n    }\n\n    public saveUserData(data: UserMainData, callback?: (error: any, success: boolean) => void): void {\n        const telegramWebApp = TelegramWebApp.Instance;\n        if (!telegramWebApp.isInited) {\n            console.error(\"Telegram Web App не инициализирован!\");\n            if (callback) callback(new Error(\"Telegram Web App не инициализирован!\"), false);\n            return;\n        }\n        const dataString = JSON.stringify(data);\n\n        telegramWebApp.cloudStorageSetItem('user_main_data', dataString, callback);\n    }\n\n    public getUserData(callback: (error: any, data: UserMainData | null) => void): void {\n        const telegramWebApp = TelegramWebApp.Instance;\n        if (!telegramWebApp.isInited) {\n            console.error(\"Telegram Web App не инициализирован!\");\n            callback(new Error(\"Telegram Web App не инициализирован!\"), null);\n            return;\n        }\n\n        telegramWebApp.cloudStorageGetItem('user_main_data', (error, value) => {\n            if (error) {\n                console.error(\"Ошибка при получении данных пользователя:\", error);\n                callback(error, null);\n            } else if (value) {\n                const data: UserMainData = JSON.parse(value);\n                callback(null, data);\n            } else {\n                callback(null, null);\n            }\n        });\n    }\n\n    public updateUserData(partialData: Partial<UserMainData>, callback?: (error: any, success: boolean) => void): void {\n        this.getUserData((error, data) => {\n            if (error) {\n                if (callback) callback(error, false);\n                return;\n            }\n\n            const updatedData: UserMainData = {\n                ...data,\n                ...partialData\n            };\n\n            this.saveUserData(updatedData, callback);\n        });\n    }\n\n    public removeUserData(callback?: (error: any, success: boolean) => void): void {\n        const telegramWebApp = TelegramWebApp.Instance;\n        if (!telegramWebApp.isInited) {\n            console.error(\"Telegram Web App не инициализирован!\");\n            if (callback) callback(new Error(\"Telegram Web App не инициализирован!\"), false);\n            return;\n        }\n\n        telegramWebApp.cloudStorageRemoveItem('user_main_data', callback);\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationManager')\nexport default class VibrationManager {\n    private static isVibrationSupported(): boolean {\n        return TelegramWebApp.Instance != null;\n    }\n\n    public static light(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"light\");\n        }\n    }\n\n    public static medium(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"medium\");\n        }\n    }\n\n    public static heavy(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"heavy\");\n        }\n    }\n\n    public static rigid(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"rigid\");\n        }\n    }\n\n    public static soft(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"soft\");\n        }\n    }\n\n    public static error(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"error\");\n        }\n    }\n\n    public static success(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"success\");\n        }\n    }\n\n    public static warning(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"warning\");\n        }\n    }\n}\n"]}