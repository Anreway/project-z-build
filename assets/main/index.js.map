{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorManager.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorSetter.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/telegram-web.ts"],"names":["ccclass","_decorator","property","_dec","_class2","_Component","ColorManager","_this","_len","arguments","length","args","Array","_key","call","apply","concat","userThemeParams","defaultThemeParams","bg_color","text_color","hint_color","link_color","button_color","button_text_color","secondary_bg_color","header_bg_color","bottom_bar_bg_color","accent_text_color","section_bg_color","section_header_text_color","section_separator_color","subtitle_text_color","destructive_text_color","_inheritsLoose","_proto","prototype","onLoad","_this2","_instance","this","TelegramWebApp","Instance","init","then","error","console","destroy","warn","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isInited","Promise","resolve","setTimeout","getTelegramThemeParams","stop","getBgColor","isDefault","Color","getTextColor","getHintColor","getLinkColor","getButtonColor","getButtonTextColor","getSecondaryBgColor","getHeaderBgColor","getBottomBarBgColor","getAccentTextColor","getSectionBgColor","getSectionHeaderTextColor","getSectionSeparatorColor","getSubtitleTextColor","getDestructiveTextColor","_createClass","key","get","Component","_class","_RF","pop","ColorType","_dec2","Sprite","_dec3","type","Enum","_descriptor","_applyDecoratedDescriptor","ColorSetter","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","start","colorManager","color","sprite","abrupt","t0","colorType","BgColor","TextColor","HintColor","LinkColor","ButtonColor","ButtonTextColor","SecondaryBgColor","HeaderBgColor","BottomBarBgColor","AccentTextColor","SectionBgColor","SectionHeaderTextColor","SectionSeparatorColor","SubtitleTextColor","DestructiveTextColor","configurable","enumerable","writable","initializer","Node","_dec4","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","node","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","Error","head","appendChild","_tgWebAppJS","sent","success","openTelegramLink","url","share","text","shareUrl","URLSearchParams","toString","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","getTelegramWebApp","themeParams","getTelegramWebAppInitData","initDataUnsafe","getTelegramUser","user","getTelegramInitData","initData","openInvoice","callback","alert","message","showAlert"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Color, Component, Node } from 'cc';\nimport { TelegramWebApp, ThemeParams } from \"./telegram-web\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('ColorManager')\nexport class ColorManager extends Component {\n\n    private static _instance: ColorManager = null;\n\n    public static get Instance(): ColorManager {\n        return this._instance;\n    }\n\n    userThemeParams: ThemeParams = null;\n\n    defaultThemeParams: ThemeParams = {\n        bg_color: \"FFFFFF\",\n        text_color: \"000000\",\n        hint_color: \"8A8A8E\",\n        link_color: \"007AFF\",\n        button_color: \"5AC8FB\",\n        button_text_color: \"FFFFFF\",\n        secondary_bg_color: \"F2F2F7\",\n        header_bg_color: \"F9F9F9\",\n        bottom_bar_bg_color : \"FF7171\",\n        accent_text_color: \"007AFF\",\n        section_bg_color: \"FFFFFF\",\n        section_header_text_color: \"85858B\",\n        section_separator_color: \"D4D4D5\",\n        subtitle_text_color: \"8A8A8E\",\n        destructive_text_color: \"FF3B30\"\n    }\n\n    protected onLoad(): void {\n        if (ColorManager._instance === null) {\n            ColorManager._instance = this;\n            TelegramWebApp.Instance.init().then(() => {\n                this.init();\n            }).catch((error) => {\n                console.error('Failed to initialize TelegramWebApp:', error);\n            });\n        } else {\n            this.destroy();\n            console.warn('Multiple instances of ColorManager detected.');\n        }\n    }\n\n    async init(){\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.userThemeParams = TelegramWebApp.Instance.getTelegramThemeParams();\n    }\n\n    public getBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bg_color);\n        }\n        return new Color(this.userThemeParams.bg_color);\n    }\n    public getTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.text_color);\n        }\n        return new Color(this.userThemeParams.text_color);\n    }\n    public getHintColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.hint_color);\n        }\n        return new Color(this.userThemeParams.hint_color);\n    }\n    public getLinkColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.link_color);\n        }\n        return new Color(this.userThemeParams.link_color);\n    }\n    public getButtonColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_color);\n        }\n        return new Color(this.userThemeParams.button_color);\n    }\n    public getButtonTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_text_color);\n        }\n        return new Color(this.userThemeParams.button_text_color);\n    }\n    public getSecondaryBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.secondary_bg_color);\n        }\n        return new Color(this.userThemeParams.secondary_bg_color);\n    }\n    public getHeaderBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.header_bg_color);\n        }\n        return new Color(this.userThemeParams.header_bg_color);\n    }\n    public getBottomBarBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bottom_bar_bg_color);\n        }\n        return new Color(this.userThemeParams.bottom_bar_bg_color);\n    }\n    public getAccentTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.accent_text_color);\n        }\n        return new Color(this.userThemeParams.accent_text_color);\n    }\n    public getSectionBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_bg_color);\n        }\n        return new Color(this.userThemeParams.section_bg_color);\n    }\n    public getSectionHeaderTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_header_text_color);\n        }\n        return new Color(this.userThemeParams.section_header_text_color);\n    }\n    public getSectionSeparatorColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_separator_color);\n        }\n        return new Color(this.userThemeParams.section_separator_color);\n    }\n    public getSubtitleTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.subtitle_text_color);\n        }\n        return new Color(this.userThemeParams.subtitle_text_color);\n    }\n    public getDestructiveTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.destructive_text_color);\n        }\n        return new Color(this.userThemeParams.destructive_text_color);\n    }\n}","import { _decorator, Component, Sprite, Enum } from 'cc';\nimport { ColorManager } from './ColorManager';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport enum ColorType {\n    BgColor = 0,\n    TextColor,\n    HintColor,\n    LinkColor,\n    ButtonColor,\n    ButtonTextColor,\n    SecondaryBgColor,\n    HeaderBgColor,\n    BottomBarBgColor,\n    AccentTextColor,\n    SectionBgColor,\n    SectionHeaderTextColor,\n    SectionSeparatorColor,\n    SubtitleTextColor,\n    DestructiveTextColor\n}\n\n@ccclass('ColorSetter')\nexport class ColorSetter extends Component {\n\n    @property\n    isDefault: boolean = false;\n\n    @property(Sprite)\n    sprite: Sprite = null;\n\n    @property({ type: Enum(ColorType) })\n    colorType: ColorType = ColorType.BgColor;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if (!this.sprite) {\n            console.error('Sprite undefined');\n            return;\n        }\n\n        const colorManager = ColorManager.Instance;\n        if (!colorManager) {\n            console.error('ColorManager undefined');\n            return;\n        }\n\n        let color = null;\n        switch (this.colorType) {\n            case ColorType.BgColor:\n                color = colorManager.getBgColor(this.isDefault);\n                break;\n            case ColorType.TextColor:\n                color = colorManager.getTextColor(this.isDefault);\n                break;\n            case ColorType.HintColor:\n                color = colorManager.getHintColor(this.isDefault);\n                break;\n            case ColorType.LinkColor:\n                color = colorManager.getLinkColor(this.isDefault);\n                break;\n            case ColorType.ButtonColor:\n                color = colorManager.getButtonColor(this.isDefault);\n                break;\n            case ColorType.ButtonTextColor:\n                color = colorManager.getButtonTextColor(this.isDefault);\n                break;\n            case ColorType.SecondaryBgColor:\n                color = colorManager.getSecondaryBgColor(this.isDefault);\n                break;\n            case ColorType.HeaderBgColor:\n                color = colorManager.getHeaderBgColor(this.isDefault);\n                break;\n            case ColorType.BottomBarBgColor:\n                color = colorManager.getBottomBarBgColor(this.isDefault);\n                break;\n            case ColorType.AccentTextColor:\n                color = colorManager.getAccentTextColor(this.isDefault);\n                break;\n            case ColorType.SectionBgColor:\n                color = colorManager.getSectionBgColor(this.isDefault);\n                break;\n            case ColorType.SectionHeaderTextColor:\n                color = colorManager.getSectionHeaderTextColor(this.isDefault);\n                break;\n            case ColorType.SectionSeparatorColor:\n                color = colorManager.getSectionSeparatorColor(this.isDefault);\n                break;\n            case ColorType.SubtitleTextColor:\n                color = colorManager.getSubtitleTextColor(this.isDefault);\n                break;\n            case ColorType.DestructiveTextColor:\n                color = colorManager.getDestructiveTextColor(this.isDefault);\n                break;\n            default:\n                console.error('Unknown type of color');\n                break;\n        }\n\n        if (color) {\n            this.sprite.color = color;\n        }\n    }\n}","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface ThemeParams {\n    bg_color: string;\n    text_color: string;\n    hint_color: string;\n    link_color: string;\n    button_color: string;\n    button_text_color: string;\n    secondary_bg_color: string;\n    header_bg_color: string;\n    bottom_bar_bg_color: string;\n    accent_text_color: string;\n    section_bg_color: string;\n    section_header_text_color: string;\n    section_separator_color: string;\n    subtitle_text_color: string;\n    destructive_text_color: string;\n}\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramThemeParams(): ThemeParams {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.themeParams;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n\n    public get isInited(): boolean {\n        return this._tgWebAppJS != null;\n    }\n}\n\n\n"]}