{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorManager.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/ColorSetter.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/file:/Users/anrew/Documents/GitHub/prozect-z-rep/ProjectZ/assets/Scripts/telegram-web.ts"],"names":["ccclass","_decorator","property","_dec","_class2","_Component","ColorManager","_this","_len","arguments","length","args","Array","_key","call","apply","concat","userThemeParams","defaultThemeParams","bg_color","text_color","hint_color","link_color","button_color","button_text_color","secondary_bg_color","header_bg_color","bottom_bar_bg_color","accent_text_color","section_bg_color","section_header_text_color","section_separator_color","subtitle_text_color","destructive_text_color","_inheritsLoose","_proto","prototype","onLoad","_this2","_instance","this","TelegramWebApp","Instance","init","then","error","console","destroy","warn","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","isInited","Promise","resolve","setTimeout","getTelegramThemeParams","stop","getBgColor","isDefault","Color","getTextColor","getHintColor","getLinkColor","getButtonColor","getButtonTextColor","getSecondaryBgColor","getHeaderBgColor","getBottomBarBgColor","getAccentTextColor","getSectionBgColor","getSectionHeaderTextColor","getSectionSeparatorColor","getSubtitleTextColor","getDestructiveTextColor","_createClass","key","get","Component","_class","_RF","pop","ColorType","_dec2","Sprite","_dec3","Label","_dec4","type","Enum","_descriptor","_applyDecoratedDescriptor","ColorSetter","_initializerDefineProperty","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","start","colorManager","color","abrupt","t0","colorType","BgColor","TextColor","HintColor","LinkColor","ButtonColor","ButtonTextColor","SecondaryBgColor","HeaderBgColor","BottomBarBgColor","AccentTextColor","SectionBgColor","SectionHeaderTextColor","SectionSeparatorColor","SubtitleTextColor","DestructiveTextColor","sprite","label","configurable","enumerable","writable","initializer","Node","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","node","parent","getComponent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","Error","head","appendChild","_tgWebAppJS","sent","success","openTelegramLink","url","share","text","shareUrl","URLSearchParams","toString","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","getTelegramWebApp","themeParams","getTelegramWebAppInitData","initDataUnsafe","getTelegramUser","user","getTelegramInitData","initData","openInvoice","callback","alert","message","showAlert"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Color, Component, Node } from 'cc';\nimport { TelegramWebApp, ThemeParams } from \"./telegram-web\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('ColorManager')\nexport class ColorManager extends Component {\n\n    private static _instance: ColorManager = null;\n\n    public static get Instance(): ColorManager {\n        return this._instance;\n    }\n\n    userThemeParams: ThemeParams = null;\n\n    defaultThemeParams: ThemeParams = {\n        bg_color: \"FFFFFF\",\n        text_color: \"000000\",\n        hint_color: \"8A8A8E\",\n        link_color: \"007AFF\",\n        button_color: \"5AC8FB\",\n        button_text_color: \"FFFFFF\",\n        secondary_bg_color: \"F2F2F7\",\n        header_bg_color: \"F9F9F9\",\n        bottom_bar_bg_color : \"FF7171\",\n        accent_text_color: \"007AFF\",\n        section_bg_color: \"FFFFFF\",\n        section_header_text_color: \"85858B\",\n        section_separator_color: \"D4D4D5\",\n        subtitle_text_color: \"8A8A8E\",\n        destructive_text_color: \"FF3B30\"\n    }\n\n    protected onLoad(): void {\n        if (ColorManager._instance === null) {\n            ColorManager._instance = this;\n            TelegramWebApp.Instance.init().then(() => {\n                this.init();\n            }).catch((error) => {\n                console.error('Failed to initialize TelegramWebApp:', error);\n            });\n        } else {\n            this.destroy();\n            console.warn('Multiple instances of ColorManager detected.');\n        }\n    }\n\n    async init(){\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.userThemeParams = TelegramWebApp.Instance.getTelegramThemeParams();\n    }\n\n    public getBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bg_color);\n        }\n        return new Color(this.userThemeParams.bg_color);\n    }\n    public getTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.text_color);\n        }\n        return new Color(this.userThemeParams.text_color);\n    }\n    public getHintColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.hint_color);\n        }\n        return new Color(this.userThemeParams.hint_color);\n    }\n    public getLinkColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.link_color);\n        }\n        return new Color(this.userThemeParams.link_color);\n    }\n    public getButtonColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_color);\n        }\n        return new Color(this.userThemeParams.button_color);\n    }\n    public getButtonTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.button_text_color);\n        }\n        return new Color(this.userThemeParams.button_text_color);\n    }\n    public getSecondaryBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.secondary_bg_color);\n        }\n        return new Color(this.userThemeParams.secondary_bg_color);\n    }\n    public getHeaderBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.header_bg_color);\n        }\n        return new Color(this.userThemeParams.header_bg_color);\n    }\n    public getBottomBarBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.bottom_bar_bg_color);\n        }\n        return new Color(this.userThemeParams.bottom_bar_bg_color);\n    }\n    public getAccentTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.accent_text_color);\n        }\n        return new Color(this.userThemeParams.accent_text_color);\n    }\n    public getSectionBgColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_bg_color);\n        }\n        return new Color(this.userThemeParams.section_bg_color);\n    }\n    public getSectionHeaderTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_header_text_color);\n        }\n        return new Color(this.userThemeParams.section_header_text_color);\n    }\n    public getSectionSeparatorColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.section_separator_color);\n        }\n        return new Color(this.userThemeParams.section_separator_color);\n    }\n    public getSubtitleTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.subtitle_text_color);\n        }\n        return new Color(this.userThemeParams.subtitle_text_color);\n    }\n    public getDestructiveTextColor(isDefault: boolean = false): Color{\n        if(!this.userThemeParams || isDefault){\n            return new Color(this.defaultThemeParams.destructive_text_color);\n        }\n        return new Color(this.userThemeParams.destructive_text_color);\n    }\n}","import { _decorator, Component, Sprite, Enum, Label } from 'cc';\nimport { ColorManager } from './ColorManager';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport enum ColorType {\n    BgColor = 0,\n    TextColor,\n    HintColor,\n    LinkColor,\n    ButtonColor,\n    ButtonTextColor,\n    SecondaryBgColor,\n    HeaderBgColor,\n    BottomBarBgColor,\n    AccentTextColor,\n    SectionBgColor,\n    SectionHeaderTextColor,\n    SectionSeparatorColor,\n    SubtitleTextColor,\n    DestructiveTextColor\n}\n\n@ccclass('ColorSetter')\nexport class ColorSetter extends Component {\n\n    @property\n    isDefault: boolean = false;\n\n    @property(Sprite)\n    sprite: Sprite = null;\n\n    @property(Label)\n    label: Label = null;\n\n    @property({ type: Enum(ColorType) })\n    colorType: ColorType = ColorType.BgColor;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n\n        while (!TelegramWebApp.Instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const colorManager = ColorManager.Instance;\n        if (!colorManager) {\n            console.error('ColorManager undefined');\n            return;\n        }\n\n        let color = null;\n        switch (this.colorType) {\n            case ColorType.BgColor:\n                color = colorManager.getBgColor(this.isDefault);\n                break;\n            case ColorType.TextColor:\n                color = colorManager.getTextColor(this.isDefault);\n                break;\n            case ColorType.HintColor:\n                color = colorManager.getHintColor(this.isDefault);\n                break;\n            case ColorType.LinkColor:\n                color = colorManager.getLinkColor(this.isDefault);\n                break;\n            case ColorType.ButtonColor:\n                color = colorManager.getButtonColor(this.isDefault);\n                break;\n            case ColorType.ButtonTextColor:\n                color = colorManager.getButtonTextColor(this.isDefault);\n                break;\n            case ColorType.SecondaryBgColor:\n                color = colorManager.getSecondaryBgColor(this.isDefault);\n                break;\n            case ColorType.HeaderBgColor:\n                color = colorManager.getHeaderBgColor(this.isDefault);\n                break;\n            case ColorType.BottomBarBgColor:\n                color = colorManager.getBottomBarBgColor(this.isDefault);\n                break;\n            case ColorType.AccentTextColor:\n                color = colorManager.getAccentTextColor(this.isDefault);\n                break;\n            case ColorType.SectionBgColor:\n                color = colorManager.getSectionBgColor(this.isDefault);\n                break;\n            case ColorType.SectionHeaderTextColor:\n                color = colorManager.getSectionHeaderTextColor(this.isDefault);\n                break;\n            case ColorType.SectionSeparatorColor:\n                color = colorManager.getSectionSeparatorColor(this.isDefault);\n                break;\n            case ColorType.SubtitleTextColor:\n                color = colorManager.getSubtitleTextColor(this.isDefault);\n                break;\n            case ColorType.DestructiveTextColor:\n                color = colorManager.getDestructiveTextColor(this.isDefault);\n                break;\n            default:\n                console.error('Unknown type of color');\n                break;\n        }\n\n        if (color) {\n            if(this.sprite){\n                this.sprite.color = color;\n            }\n            \n            if(this.label){\n                this.label.color = color;\n            }\n        }\n    }\n}","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface ThemeParams {\n    bg_color: string;\n    text_color: string;\n    hint_color: string;\n    link_color: string;\n    button_color: string;\n    button_text_color: string;\n    secondary_bg_color: string;\n    header_bg_color: string;\n    bottom_bar_bg_color: string;\n    accent_text_color: string;\n    section_bg_color: string;\n    section_header_text_color: string;\n    section_separator_color: string;\n    subtitle_text_color: string;\n    destructive_text_color: string;\n}\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramThemeParams(): ThemeParams {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.themeParams;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n\n    public get isInited(): boolean {\n        return this._tgWebAppJS != null;\n    }\n}\n\n\n"]}